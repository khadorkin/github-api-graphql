[
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/120",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/120/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/120/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/120/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/120",
    "id": 175891382,
    "number": 120,
    "title": "Small tweaks to the README",
    "user": {
      "login": "lacker",
      "id": 106475,
      "avatar_url": "https://avatars.githubusercontent.com/u/106475?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lacker",
      "html_url": "https://github.com/lacker",
      "followers_url": "https://api.github.com/users/lacker/followers",
      "following_url": "https://api.github.com/users/lacker/following{/other_user}",
      "gists_url": "https://api.github.com/users/lacker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lacker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lacker/subscriptions",
      "organizations_url": "https://api.github.com/users/lacker/orgs",
      "repos_url": "https://api.github.com/users/lacker/repos",
      "events_url": "https://api.github.com/users/lacker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lacker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-09-08T23:37:08Z",
    "updated_at": "2016-09-12T21:51:52Z",
    "closed_at": "2016-09-12T21:51:42Z",
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/120",
      "html_url": "https://github.com/graphql/express-graphql/pull/120",
      "diff_url": "https://github.com/graphql/express-graphql/pull/120.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/120.patch"
    },
    "body": "1/ Consistently using \"GraphQL.js\" rather than \"graphql-js\"\r\n2/ Kinda crazy but for the longest time I had been mistakenly thinking that you had to navigate to `/graphql/graphiql` to get to GraphiQL by default. Nope, it displays whenever text/html is accepted. BUT - that works anyway accidentally because it's mounted as middleware rather than an endpoint. Anyway I just removed the phrasing that alluded to this past confusion of mine."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/119",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/119/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/119/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/119/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/119",
    "id": 174676116,
    "number": 119,
    "title": "Re-enable express etag support",
    "user": {
      "login": "brandondoran",
      "id": 1189930,
      "avatar_url": "https://avatars.githubusercontent.com/u/1189930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandondoran",
      "html_url": "https://github.com/brandondoran",
      "followers_url": "https://api.github.com/users/brandondoran/followers",
      "following_url": "https://api.github.com/users/brandondoran/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandondoran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandondoran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandondoran/subscriptions",
      "organizations_url": "https://api.github.com/users/brandondoran/orgs",
      "repos_url": "https://api.github.com/users/brandondoran/repos",
      "events_url": "https://api.github.com/users/brandondoran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandondoran/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-09-02T04:02:48Z",
    "updated_at": "2016-09-13T05:58:11Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/119",
      "html_url": "https://github.com/graphql/express-graphql/pull/119",
      "diff_url": "https://github.com/graphql/express-graphql/pull/119.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/119.patch"
    },
    "body": "The express `response.send` provides some extra functionality, such as adding an ETag header. https://github.com/graphql/express-graphql/commit/48e6659945477bd706fe22173f450c16eddd5bf5 removed `.send` in favor of `.end` in order to support connect. This PR adds a helper function, `sendResponse`, which calls `response.send` if that method exists (i.e. the server is express), otherwise fallback to `response.end`.\r\n\r\nIn order to test that the correct method is called, I added sinon as a devDependency and a single test that uses a spy to verify that `send` is called when the server is express. \r\n\r\nThis fixes #115"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/118",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/118/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/118/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/118/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/118",
    "id": 173294260,
    "number": 118,
    "title": "support for adding optional error handling function before returning â€¦",
    "user": {
      "login": "tim-steele",
      "id": 1490225,
      "avatar_url": "https://avatars.githubusercontent.com/u/1490225?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tim-steele",
      "html_url": "https://github.com/tim-steele",
      "followers_url": "https://api.github.com/users/tim-steele/followers",
      "following_url": "https://api.github.com/users/tim-steele/following{/other_user}",
      "gists_url": "https://api.github.com/users/tim-steele/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tim-steele/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tim-steele/subscriptions",
      "organizations_url": "https://api.github.com/users/tim-steele/orgs",
      "repos_url": "https://api.github.com/users/tim-steele/repos",
      "events_url": "https://api.github.com/users/tim-steele/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tim-steele/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-08-25T19:54:58Z",
    "updated_at": "2016-09-13T05:58:14Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/118",
      "html_url": "https://github.com/graphql/express-graphql/pull/118",
      "diff_url": "https://github.com/graphql/express-graphql/pull/118.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/118.patch"
    },
    "body": "#116 the ability to modify responses and the status codes based on errors.\r\n\r\nGives the option to handle errors from responses before sending back the request. If you do not want to handle the errors, you can omit the optional `handleErrors` function and it will behave as normal. Since it is optional, it shouldn't break existing functionality. "
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/117",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/117/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/117/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/117/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/117",
    "id": 173135120,
    "number": 117,
    "title": "Context defaulting to request",
    "user": {
      "login": "lacker",
      "id": 106475,
      "avatar_url": "https://avatars.githubusercontent.com/u/106475?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lacker",
      "html_url": "https://github.com/lacker",
      "followers_url": "https://api.github.com/users/lacker/followers",
      "following_url": "https://api.github.com/users/lacker/following{/other_user}",
      "gists_url": "https://api.github.com/users/lacker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lacker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lacker/subscriptions",
      "organizations_url": "https://api.github.com/users/lacker/orgs",
      "repos_url": "https://api.github.com/users/lacker/repos",
      "events_url": "https://api.github.com/users/lacker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lacker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-08-25T07:46:51Z",
    "updated_at": "2016-08-25T17:22:34Z",
    "closed_at": "2016-08-25T17:22:17Z",
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/117",
      "html_url": "https://github.com/graphql/express-graphql/pull/117",
      "diff_url": "https://github.com/graphql/express-graphql/pull/117.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/117.patch"
    },
    "body": "This PR slightly tweaks the default behavior so that by default the express request is passed as the context object, and updates a decent amount of the README documentation.\r\n\r\nThe rationale is to make it simpler to support express middleware, in particular authentication. Most express middleware works similarly - some extra field is tacked onto `request`. This is convenient for express developers because the `request` object is accessible from every route handler. The graphql equivalent of a route handler is a resolver, so if the `request` object is simply available to every resolver, express middleware is generally usable without having to alter the graphqlHTTP route handler itself. I think this is an \"expressy\" thing to do, even if it does not quite aesthetically jive with the deep love of immutability reflected in graphql itself.\r\n\r\nMiddleware that behaves this way & can now be used without altering the graphqlHTTP method call:\r\n* express-session tacks on request.session\r\n* express-jwt tacks on request.user\r\n* passport tacks on request.user\r\n* multer tacks on request.file or request.files\r\n\r\nNote the \"advanced scenario\" docs of authentication are simpler now - you do not have to pass a function to the graphqlHTTP method, you can just use the same call that was in the \"intro\".\r\n\r\nThis is backward compatible unless you wrote code that relies on having a falsy context which seems unlikely.\r\n\r\nDocumentation changes are mostly self-explanatory. The change to using port 4000 in the example is so that it doesn't conflict by default with create-react-app - a small tweak but this may avoid little bits of confusion. Using 'require' instead of 'import' is a bit sad but preferable for now because it means that this code works with node out of the box - most node developers are not transpiling.\r\n"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/116",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/116/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/116/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/116/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/116",
    "id": 173027687,
    "number": 116,
    "title": "Surfacing HTTP Status Codes of Queries",
    "user": {
      "login": "tim-steele",
      "id": 1490225,
      "avatar_url": "https://avatars.githubusercontent.com/u/1490225?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tim-steele",
      "html_url": "https://github.com/tim-steele",
      "followers_url": "https://api.github.com/users/tim-steele/followers",
      "following_url": "https://api.github.com/users/tim-steele/following{/other_user}",
      "gists_url": "https://api.github.com/users/tim-steele/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tim-steele/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tim-steele/subscriptions",
      "organizations_url": "https://api.github.com/users/tim-steele/orgs",
      "repos_url": "https://api.github.com/users/tim-steele/repos",
      "events_url": "https://api.github.com/users/tim-steele/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tim-steele/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-08-24T18:42:53Z",
    "updated_at": "2016-08-25T20:28:30Z",
    "closed_at": null,
    "body": "**Issue:** \r\nIf a query returns a HTTP status code other than 200, express-graphql still returns 200, with the error placed in an array assigned to the `errors` property. \r\n\r\nThis can cause problems with caching. When error status codes are not set and a 200 is sent instead, the error or incomplete data will be cached. \r\n\r\n**Example:**\r\nYou are hosting an online store. Someone views a product. The product details query returns an HTTP error, but the reviews query and recommendations query do not. That product's incomplete data is now cached due to the 200 status code, instead of surfacing the product details query's status code.\r\n\r\n**Proposed Solution:**\r\nI think the simplest solution would be creating a new option `handleErrors`, a function that receives the errors array and the response object on line `247` in `src/index.js`. If option was set, invoke it, otherwise do nothing. This will allow developers to access the errors and decide how they want to handle them or modify the response before being sent.\r\n\r\nI wanted to gauge interest and feedback on this before I looked to submit a pull request. Please let me know if you would accept this PR and this proposed solution.\r\n"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/115",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/115/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/115/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/115/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/115",
    "id": 170820043,
    "number": 115,
    "title": "Broken express etag support",
    "user": {
      "login": "kretz",
      "id": 154819,
      "avatar_url": "https://avatars.githubusercontent.com/u/154819?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kretz",
      "html_url": "https://github.com/kretz",
      "followers_url": "https://api.github.com/users/kretz/followers",
      "following_url": "https://api.github.com/users/kretz/following{/other_user}",
      "gists_url": "https://api.github.com/users/kretz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kretz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kretz/subscriptions",
      "organizations_url": "https://api.github.com/users/kretz/orgs",
      "repos_url": "https://api.github.com/users/kretz/repos",
      "events_url": "https://api.github.com/users/kretz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kretz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-12T08:11:23Z",
    "updated_at": "2016-08-25T05:55:48Z",
    "closed_at": null,
    "body": "Hi,\r\n\r\nThe commit 48e6659945477bd706fe22173f450c16eddd5bf5 broke the built-in etag support of express. \r\n\r\nThis is due to using `response.write` instead of `response.send` (which has the etag generation inside) https://github.com/graphql/express-graphql/blob/master/src/index.js#L250.\r\n\r\nThe commit states that this is made to be compatible with connect. Is there a way to also support etags for express?\r\n\r\nThanks,\r\nMartin\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/114",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/114/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/114/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/114/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/114",
    "id": 170554003,
    "number": 114,
    "title": "graphql-express -> express-graphql in readme",
    "user": {
      "login": "chentsulin",
      "id": 3382565,
      "avatar_url": "https://avatars.githubusercontent.com/u/3382565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chentsulin",
      "html_url": "https://github.com/chentsulin",
      "followers_url": "https://api.github.com/users/chentsulin/followers",
      "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
      "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
      "organizations_url": "https://api.github.com/users/chentsulin/orgs",
      "repos_url": "https://api.github.com/users/chentsulin/repos",
      "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chentsulin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-08-11T01:23:27Z",
    "updated_at": "2016-08-13T01:10:21Z",
    "closed_at": "2016-08-13T01:10:20Z",
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/114",
      "html_url": "https://github.com/graphql/express-graphql/pull/114",
      "diff_url": "https://github.com/graphql/express-graphql/pull/114.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/114.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/113",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/113/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/113/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/113/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/113",
    "id": 170553303,
    "number": 113,
    "title": "[Proposal] Split into multiple middlewares",
    "user": {
      "login": "chentsulin",
      "id": 3382565,
      "avatar_url": "https://avatars.githubusercontent.com/u/3382565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chentsulin",
      "html_url": "https://github.com/chentsulin",
      "followers_url": "https://api.github.com/users/chentsulin/followers",
      "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
      "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
      "organizations_url": "https://api.github.com/users/chentsulin/orgs",
      "repos_url": "https://api.github.com/users/chentsulin/repos",
      "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chentsulin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-08-11T01:15:25Z",
    "updated_at": "2016-08-25T05:28:45Z",
    "closed_at": null,
    "body": "Just a idea, but I think we should embrace express middleware system.\r\n\r\nMaybe something like below:\r\n\r\n```js\r\nimport { parser, validate, execute, errorHandler, graphiql } from 'express-graphql';\r\nimport logger from 'graphql-third-party-query-param-logger';\r\n\r\nconst app = express();\r\n\r\napp.use('/graphql', parser(...));\r\napp.use('/graphql', logger(...));\r\napp.use('/graphql', validate(...));\r\napp.use('/graphql', execute(...));\r\napp.use('/graphql', errorHander(...));\r\napp.use('/graphql', graphiql(...));\r\n\r\napp.listen(3000);\r\n```\r\n\r\nAnd then we can use middlewares at any points to log and measure performance, even have more control on input, output and errors.\r\n\r\nEventually, more reasonable, extendable middlewares will born and enrich the whole graphql ecosystem.\r\n\r\nRelative issue: #101 #102 #107"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/112",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/112/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/112/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/112/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/112",
    "id": 170507673,
    "number": 112,
    "title": "Allow fallback to hosted js files without cdn",
    "user": {
      "login": "ofbeaton",
      "id": 1781089,
      "avatar_url": "https://avatars.githubusercontent.com/u/1781089?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ofbeaton",
      "html_url": "https://github.com/ofbeaton",
      "followers_url": "https://api.github.com/users/ofbeaton/followers",
      "following_url": "https://api.github.com/users/ofbeaton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ofbeaton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ofbeaton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ofbeaton/subscriptions",
      "organizations_url": "https://api.github.com/users/ofbeaton/orgs",
      "repos_url": "https://api.github.com/users/ofbeaton/repos",
      "events_url": "https://api.github.com/users/ofbeaton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ofbeaton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-08-10T20:12:49Z",
    "updated_at": "2016-08-13T01:52:28Z",
    "closed_at": null,
    "body": "Tried to use graphiql provided by this package on an intranet without an internet connection, horrible experience, everything is loaded from cdn.\r\n\r\nSimilar issues in other flavours of graphiql, seems like I'm not the only one having this issue.\r\nexponentjs/koa-graphiql#1\r\n\r\nThis was already fixed in the `example/` for graphiql itself: graphql/graphiql#135\r\n\r\nCould we please have a fallback where if the cdn fails to load the files it loads a local copy?"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/111",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/111/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/111/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/111/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/111",
    "id": 167103873,
    "number": 111,
    "title": "Custom http status code response",
    "user": {
      "login": "brunolemos",
      "id": 619186,
      "avatar_url": "https://avatars.githubusercontent.com/u/619186?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunolemos",
      "html_url": "https://github.com/brunolemos",
      "followers_url": "https://api.github.com/users/brunolemos/followers",
      "following_url": "https://api.github.com/users/brunolemos/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunolemos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunolemos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunolemos/subscriptions",
      "organizations_url": "https://api.github.com/users/brunolemos/orgs",
      "repos_url": "https://api.github.com/users/brunolemos/repos",
      "events_url": "https://api.github.com/users/brunolemos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunolemos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-07-22T18:24:55Z",
    "updated_at": "2016-07-27T18:33:47Z",
    "closed_at": "2016-07-27T18:33:47Z",
    "body": "We are used to return different status codes depending on the error, e.g. 401, 404, 500, etc.\r\nIs it recommended to do this in GraphQL? If so, how to do that in `express-graphql`? \r\n\r\nThanks."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/110",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/110/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/110/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/110/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/110",
    "id": 166931362,
    "number": 110,
    "title": "Support for an array of queries in a single request?",
    "user": {
      "login": "ryancole",
      "id": 484801,
      "avatar_url": "https://avatars.githubusercontent.com/u/484801?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryancole",
      "html_url": "https://github.com/ryancole",
      "followers_url": "https://api.github.com/users/ryancole/followers",
      "following_url": "https://api.github.com/users/ryancole/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryancole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryancole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryancole/subscriptions",
      "organizations_url": "https://api.github.com/users/ryancole/orgs",
      "repos_url": "https://api.github.com/users/ryancole/repos",
      "events_url": "https://api.github.com/users/ryancole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryancole/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-07-21T22:21:38Z",
    "updated_at": "2016-08-13T01:07:27Z",
    "closed_at": "2016-08-13T01:07:18Z",
    "body": "What are your thoughts on adding support for multiple queries in a single http request? This is currently possible via additional express middle ware. Does this sound like something that would make sense as a first class feature in express-graphql?\r\n\r\nThis can be useful when using a per-request query batching tool like DataLoader."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/109",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/109/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/109/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/109/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/109",
    "id": 166698086,
    "number": 109,
    "title": "[RFC] Persisted Document support",
    "user": {
      "login": "alangenfeld",
      "id": 202219,
      "avatar_url": "https://avatars.githubusercontent.com/u/202219?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alangenfeld",
      "html_url": "https://github.com/alangenfeld",
      "followers_url": "https://api.github.com/users/alangenfeld/followers",
      "following_url": "https://api.github.com/users/alangenfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/alangenfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alangenfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alangenfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/alangenfeld/orgs",
      "repos_url": "https://api.github.com/users/alangenfeld/repos",
      "events_url": "https://api.github.com/users/alangenfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alangenfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-07-20T22:33:20Z",
    "updated_at": "2016-08-26T01:08:55Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/109",
      "html_url": "https://github.com/graphql/express-graphql/pull/109",
      "diff_url": "https://github.com/graphql/express-graphql/pull/109.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/109.patch"
    },
    "body": "This adds support to express-graphql for GraphQL persisted documents. This is a feature we have discussed in ad-hoc ways since open sourcing GraphQL, and are now attempting to demonstrate more concretely. Persisted documents are foundational to how we use GraphQL at Facebook, especially for our mobile clients. Additional background context is being added to the README.\r\n\r\nThe goal in adding this support to express-graphql is to provide a clear example of how this idea can be implemented which should allow it to be translated to any other GraphQL server middleware or implementation.\r\n\r\nNotes:\r\n- persistValidatedDocument and providing the /persist endpoint is still a nascent idea, that needs the most scrutiny. Then once its settled, tests."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/108",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/108/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/108/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/108/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/108",
    "id": 166573769,
    "number": 108,
    "title": "Force client to use UTF-8 encoding by setting encoding in Content-Typâ€¦",
    "user": {
      "login": "stanogurnik",
      "id": 2771618,
      "avatar_url": "https://avatars.githubusercontent.com/u/2771618?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanogurnik",
      "html_url": "https://github.com/stanogurnik",
      "followers_url": "https://api.github.com/users/stanogurnik/followers",
      "following_url": "https://api.github.com/users/stanogurnik/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanogurnik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanogurnik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanogurnik/subscriptions",
      "organizations_url": "https://api.github.com/users/stanogurnik/orgs",
      "repos_url": "https://api.github.com/users/stanogurnik/repos",
      "events_url": "https://api.github.com/users/stanogurnik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanogurnik/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-07-20T12:52:34Z",
    "updated_at": "2016-08-13T01:09:58Z",
    "closed_at": "2016-08-13T01:09:52Z",
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/108",
      "html_url": "https://github.com/graphql/express-graphql/pull/108",
      "diff_url": "https://github.com/graphql/express-graphql/pull/108.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/108.patch"
    },
    "body": "Force client to use UTF-8 encoding by setting encoding in Content-Type header."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/107",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/107/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/107/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/107/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/107",
    "id": 166490231,
    "number": 107,
    "title": "support graphql request metrics trace",
    "user": {
      "login": "violet-day",
      "id": 5970246,
      "avatar_url": "https://avatars.githubusercontent.com/u/5970246?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/violet-day",
      "html_url": "https://github.com/violet-day",
      "followers_url": "https://api.github.com/users/violet-day/followers",
      "following_url": "https://api.github.com/users/violet-day/following{/other_user}",
      "gists_url": "https://api.github.com/users/violet-day/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/violet-day/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/violet-day/subscriptions",
      "organizations_url": "https://api.github.com/users/violet-day/orgs",
      "repos_url": "https://api.github.com/users/violet-day/repos",
      "events_url": "https://api.github.com/users/violet-day/events{/privacy}",
      "received_events_url": "https://api.github.com/users/violet-day/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-07-20T04:06:53Z",
    "updated_at": "2016-08-25T05:16:31Z",
    "closed_at": null,
    "body": "In graphql,all request is POST and in the same url.\r\n\r\nBecause of this,the server side can not distinguish which request is slow.\r\n\r\nIn below query,is there any way to get the `TestQuery` value before graphql execute so I can trace the query name and log it's cost time?\r\n\r\n```graphql\r\nQuery TestQuery{\r\n  ping\r\n}\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/106",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/106/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/106/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/106/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/106",
    "id": 166256988,
    "number": 106,
    "title": "return undefined instead of null in safeSerialize to make localStorage functionality back",
    "user": {
      "login": "jarvisaoieong",
      "id": 195635,
      "avatar_url": "https://avatars.githubusercontent.com/u/195635?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jarvisaoieong",
      "html_url": "https://github.com/jarvisaoieong",
      "followers_url": "https://api.github.com/users/jarvisaoieong/followers",
      "following_url": "https://api.github.com/users/jarvisaoieong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jarvisaoieong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jarvisaoieong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jarvisaoieong/subscriptions",
      "organizations_url": "https://api.github.com/users/jarvisaoieong/orgs",
      "repos_url": "https://api.github.com/users/jarvisaoieong/repos",
      "events_url": "https://api.github.com/users/jarvisaoieong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jarvisaoieong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-07-19T06:24:53Z",
    "updated_at": "2016-09-13T05:58:31Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/106",
      "html_url": "https://github.com/graphql/express-graphql/pull/106",
      "diff_url": "https://github.com/graphql/express-graphql/pull/106.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/106.patch"
    },
    "body": "According to the implementation in [graphiql](https://github.com/graphql/graphiql/blob/master/src/components/GraphiQL.js#L139) , I think we should change `null` to `undefined` in order to enable the localStorage functionality in graphiql.\r\n"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/105",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/105/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/105/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/105/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/105",
    "id": 165233630,
    "number": 105,
    "title": "application/graphql requests being incorrectly handled?",
    "user": {
      "login": "nevir",
      "id": 41373,
      "avatar_url": "https://avatars.githubusercontent.com/u/41373?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nevir",
      "html_url": "https://github.com/nevir",
      "followers_url": "https://api.github.com/users/nevir/followers",
      "following_url": "https://api.github.com/users/nevir/following{/other_user}",
      "gists_url": "https://api.github.com/users/nevir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nevir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nevir/subscriptions",
      "organizations_url": "https://api.github.com/users/nevir/orgs",
      "repos_url": "https://api.github.com/users/nevir/repos",
      "events_url": "https://api.github.com/users/nevir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nevir/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-07-13T04:13:34Z",
    "updated_at": "2016-07-13T04:16:15Z",
    "closed_at": "2016-07-13T04:16:15Z",
    "body": "I'm guessing that I'm doing something dumb here, but I can't see it :(  Would appreciate some pointers!\r\n\r\nRequesting via the JSON protocol works great:\r\n```\r\n> curl -H \"Content-Type:application/json\" -XPOST -d '{\"query\": \"{ currentUser { id } }\"}' http://localhost:3000/graphql\r\n{\r\n  \"data\": {\r\n    \"currentUser\": {\r\n      \"id\": \"f9342aa2-7674-4050-9e6c-559f14c46b52\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nBut when I attempt to use the `application/graphql` protocol, I get:\r\n```\r\n> curl -H \"Content-Type:application/graphql\" -XPOST -d \"{ currentUser { id } }\" http://localhost:3000/graphql\r\n{\r\n  \"errors\": [\r\n    {\r\n      \"message\": \"Must provide query string.\"\r\n    }\r\n  ]\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/104",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/104/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/104/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/104/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/104",
    "id": 163651750,
    "number": 104,
    "title": "Add option to format result before sending to the client",
    "user": {
      "login": "robrichard",
      "id": 3814096,
      "avatar_url": "https://avatars.githubusercontent.com/u/3814096?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robrichard",
      "html_url": "https://github.com/robrichard",
      "followers_url": "https://api.github.com/users/robrichard/followers",
      "following_url": "https://api.github.com/users/robrichard/following{/other_user}",
      "gists_url": "https://api.github.com/users/robrichard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robrichard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robrichard/subscriptions",
      "organizations_url": "https://api.github.com/users/robrichard/orgs",
      "repos_url": "https://api.github.com/users/robrichard/repos",
      "events_url": "https://api.github.com/users/robrichard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robrichard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-07-04T10:51:16Z",
    "updated_at": "2016-09-13T05:58:54Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/104",
      "html_url": "https://github.com/graphql/express-graphql/pull/104",
      "diff_url": "https://github.com/graphql/express-graphql/pull/104.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/104.patch"
    },
    "body": "Adds an option to provide a function to format the result before sending to the client. My use case is to create a debug mode where I can return information about each request our GraphQL server makes to our REST API. As each request is made, the debug information is appended to the context, then returned as part of the json response."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/103",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/103/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/103/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/103/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/103",
    "id": 163525957,
    "number": 103,
    "title": "Flow Definitions Removed During Compile/Build",
    "user": {
      "login": "mwalkerwells",
      "id": 16157429,
      "avatar_url": "https://avatars.githubusercontent.com/u/16157429?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwalkerwells",
      "html_url": "https://github.com/mwalkerwells",
      "followers_url": "https://api.github.com/users/mwalkerwells/followers",
      "following_url": "https://api.github.com/users/mwalkerwells/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwalkerwells/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwalkerwells/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwalkerwells/subscriptions",
      "organizations_url": "https://api.github.com/users/mwalkerwells/orgs",
      "repos_url": "https://api.github.com/users/mwalkerwells/repos",
      "events_url": "https://api.github.com/users/mwalkerwells/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwalkerwells/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-07-02T16:37:37Z",
    "updated_at": "2016-09-07T04:49:57Z",
    "closed_at": "2016-08-19T18:11:10Z",
    "body": "I'm using Flow in my project & I'd like to use all the flow definitions from express-graphql, yet they are removed during the build script.\r\n\r\nDisclaimer: I'm unfamiliar with how Travis CI works.\r\n\r\nI know I can manually download the project to get access to the 'src' directory where the definitions are, but that seems a bit weird. I'd like to use npm install to maintain all my packages + preserve the flow type definitions.\r\n\r\nWhat is the best practice for preserving flow definitions using npm install? & is there a way to do so that is not package specific & would apply to all flow typed libraries? "
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/102",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/102/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/102/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/102/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/102",
    "id": 163191061,
    "number": 102,
    "title": "Add middleware to transform req.query",
    "user": {
      "login": "zgababa",
      "id": 3789044,
      "avatar_url": "https://avatars.githubusercontent.com/u/3789044?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zgababa",
      "html_url": "https://github.com/zgababa",
      "followers_url": "https://api.github.com/users/zgababa/followers",
      "following_url": "https://api.github.com/users/zgababa/following{/other_user}",
      "gists_url": "https://api.github.com/users/zgababa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zgababa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zgababa/subscriptions",
      "organizations_url": "https://api.github.com/users/zgababa/orgs",
      "repos_url": "https://api.github.com/users/zgababa/repos",
      "events_url": "https://api.github.com/users/zgababa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zgababa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-06-30T15:14:40Z",
    "updated_at": "2016-08-13T01:33:15Z",
    "closed_at": "2016-08-13T01:33:15Z",
    "body": "Hi ! \r\n\r\nI have a compressed query in req, and I want to decompress it before send to GraphiQL. Why this code doesn't work ? Is it possible ? \r\n\r\n\r\n```javascript\r\nrouter.use(\"/debug\", (req, res, next) => {\r\n  const decompressed = lz.decompressFromEncodedURIComponent(req.query.query);\r\n  req.query = {\r\n    query : decompressed,\r\n  };\r\n  next();\r\n}, require(\"express-graphql\")({\r\n  schema : graphqlRootSchema,\r\n  graphiql : config.get(\"NODE_ENV\") !== \"production\",\r\n  pretty : true,\r\n  formatError : format.fromGraphiql\r\n}));\r\n```\r\n\r\nThx !"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/101",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/101/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/101/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/101/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/101",
    "id": 162835718,
    "number": 101,
    "title": "Custom GraphiQL middleware",
    "user": {
      "login": "eugenehp",
      "id": 1857263,
      "avatar_url": "https://avatars.githubusercontent.com/u/1857263?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eugenehp",
      "html_url": "https://github.com/eugenehp",
      "followers_url": "https://api.github.com/users/eugenehp/followers",
      "following_url": "https://api.github.com/users/eugenehp/following{/other_user}",
      "gists_url": "https://api.github.com/users/eugenehp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eugenehp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eugenehp/subscriptions",
      "organizations_url": "https://api.github.com/users/eugenehp/orgs",
      "repos_url": "https://api.github.com/users/eugenehp/repos",
      "events_url": "https://api.github.com/users/eugenehp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eugenehp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-06-29T03:52:54Z",
    "updated_at": "2016-09-12T23:37:55Z",
    "closed_at": null,
    "body": "Hi Lee,\r\n\r\nI just finished draft version of [GraphiQL](https://github.com/eugenehp/graphiql/tree/headers) that supports HTTP headers.\r\nI know there are multiple discussions about keeping the original GraphiQL version lean and protocol independent, which makes sense to me.\r\n\r\nSo the question is what's the best way to structure the middle ware here, so we can specify our own custom versions.\r\n\r\nAt the moment I'm using non flexible solution:\r\n`graphQLServer.use('/graphiql', express.static('graphiql'));`\r\n\r\nBut I would want to see something like this possible:\r\n\r\n```\r\nimport graphiql from 'graphiql-headers';\r\napp.use('/graphql', graphqlHTTP(request => ({\r\n  schema: MySessionAwareGraphQLSchema,\r\n  context: request.session,\r\n  graphiql: graphiql\r\n})));\r\n```\r\n\r\nWhat would be accepted as PR?\r\n\r\nThanks for your time on this."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/100",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/100/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/100/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/100/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/100",
    "id": 162033598,
    "number": 100,
    "title": "[WIP] Add rudimentary batched query support",
    "user": {
      "login": "taion",
      "id": 3112159,
      "avatar_url": "https://avatars.githubusercontent.com/u/3112159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/taion",
      "html_url": "https://github.com/taion",
      "followers_url": "https://api.github.com/users/taion/followers",
      "following_url": "https://api.github.com/users/taion/following{/other_user}",
      "gists_url": "https://api.github.com/users/taion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/taion/subscriptions",
      "organizations_url": "https://api.github.com/users/taion/orgs",
      "repos_url": "https://api.github.com/users/taion/repos",
      "events_url": "https://api.github.com/users/taion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/taion/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 24,
    "created_at": "2016-06-23T22:01:47Z",
    "updated_at": "2016-09-13T05:59:26Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/100",
      "html_url": "https://github.com/graphql/express-graphql/pull/100",
      "diff_url": "https://github.com/graphql/express-graphql/pull/100.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/100.patch"
    },
    "body": "This is a WIP adding very rudimentary support for batched queries executed with the same shared execution context, when queries are specified as a JSON array.\r\n\r\nThis allows schemas using DataLoader (and sticking those DataLoaders on context) to share batching and caching across batched requests.\r\n\r\nDo you think this makes sense to have here?"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/99",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/99/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/99/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/99/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/99",
    "id": 161498651,
    "number": 99,
    "title": "Return main promise",
    "user": {
      "login": "helfer",
      "id": 6569980,
      "avatar_url": "https://avatars.githubusercontent.com/u/6569980?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/helfer",
      "html_url": "https://github.com/helfer",
      "followers_url": "https://api.github.com/users/helfer/followers",
      "following_url": "https://api.github.com/users/helfer/following{/other_user}",
      "gists_url": "https://api.github.com/users/helfer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/helfer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/helfer/subscriptions",
      "organizations_url": "https://api.github.com/users/helfer/orgs",
      "repos_url": "https://api.github.com/users/helfer/repos",
      "events_url": "https://api.github.com/users/helfer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/helfer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-06-21T17:45:35Z",
    "updated_at": "2016-08-13T01:02:51Z",
    "closed_at": "2016-08-13T01:02:51Z",
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/99",
      "html_url": "https://github.com/graphql/express-graphql/pull/99",
      "diff_url": "https://github.com/graphql/express-graphql/pull/99.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/99.patch"
    },
    "body": "Returning the main promise will let us do things like time execution and perform some cleanups after the request is processed."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/98",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/98/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/98/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/98/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/98",
    "id": 161128654,
    "number": 98,
    "title": "`rootValue` no longer being passed",
    "user": {
      "login": "mexpolk",
      "id": 915649,
      "avatar_url": "https://avatars.githubusercontent.com/u/915649?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mexpolk",
      "html_url": "https://github.com/mexpolk",
      "followers_url": "https://api.github.com/users/mexpolk/followers",
      "following_url": "https://api.github.com/users/mexpolk/following{/other_user}",
      "gists_url": "https://api.github.com/users/mexpolk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mexpolk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mexpolk/subscriptions",
      "organizations_url": "https://api.github.com/users/mexpolk/orgs",
      "repos_url": "https://api.github.com/users/mexpolk/repos",
      "events_url": "https://api.github.com/users/mexpolk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mexpolk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-06-20T06:59:33Z",
    "updated_at": "2016-06-20T16:33:45Z",
    "closed_at": "2016-06-20T16:33:18Z",
    "body": "After upgrading to latest React NPM packages, `rootValue` it's no longer being passed:\r\n\r\n+    \"express-graphql\": \"^0.5.3\",\r\n+    \"graphql\": \"^0.6.0\",\r\n+    \"graphql-relay\": \"^0.4.2\",\r\n+    \"react-relay\": \"^0.9.0\",\r\n+    \"babel-relay-plugin\": \"^0.9.0\",\r\n"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/97",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/97/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/97/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/97/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/97",
    "id": 159531845,
    "number": 97,
    "title": "Pass through the logFn option to execute",
    "user": {
      "login": "Slava",
      "id": 2608446,
      "avatar_url": "https://avatars.githubusercontent.com/u/2608446?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Slava",
      "html_url": "https://github.com/Slava",
      "followers_url": "https://api.github.com/users/Slava/followers",
      "following_url": "https://api.github.com/users/Slava/following{/other_user}",
      "gists_url": "https://api.github.com/users/Slava/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Slava/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Slava/subscriptions",
      "organizations_url": "https://api.github.com/users/Slava/orgs",
      "repos_url": "https://api.github.com/users/Slava/repos",
      "events_url": "https://api.github.com/users/Slava/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Slava/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-06-09T23:37:19Z",
    "updated_at": "2016-09-13T05:59:01Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/97",
      "html_url": "https://github.com/graphql/express-graphql/pull/97",
      "diff_url": "https://github.com/graphql/express-graphql/pull/97.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/97.patch"
    },
    "body": "This PR is accommodating https://github.com/graphql/graphql-js/pull/402\r\n\r\nOnce that PR is merged, this will one will be a logical pass through."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/96",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/96/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/96/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/96/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/96",
    "id": 159262012,
    "number": 96,
    "title": "broken import for typescript",
    "user": {
      "login": "AlmaasAre",
      "id": 1777366,
      "avatar_url": "https://avatars.githubusercontent.com/u/1777366?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlmaasAre",
      "html_url": "https://github.com/AlmaasAre",
      "followers_url": "https://api.github.com/users/AlmaasAre/followers",
      "following_url": "https://api.github.com/users/AlmaasAre/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlmaasAre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlmaasAre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlmaasAre/subscriptions",
      "organizations_url": "https://api.github.com/users/AlmaasAre/orgs",
      "repos_url": "https://api.github.com/users/AlmaasAre/repos",
      "events_url": "https://api.github.com/users/AlmaasAre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlmaasAre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-06-08T20:22:41Z",
    "updated_at": "2016-08-13T01:28:23Z",
    "closed_at": "2016-08-13T01:28:23Z",
    "body": "Unable to require the module using `import` in Typescript after this change: #92 . It compiles, but seems like the module doesn't have any default export.\r\n\r\nCode:\r\n```\r\nimport graphqlHTTP from 'express-graphql';\r\nimport schema from './schema';\r\n\r\nconst graphqlMiddleware:any = graphqlHTTP({\r\n  graphiql: true,\r\n  pretty: true,\r\n  schema: schema,\r\n});\r\n\r\n```\r\n\r\nruntime error:\r\n\r\n```\r\nconst graphqlMiddleware = express_graphql_1.default({\r\n                                                                           ^\r\nTypeError: express_graphql_1.default is not a function\r\n\r\n```\r\n\r\ntsconfig:\r\n\r\n```\r\n\"compilerOptions\": {\r\n        \"target\": \"es2015\",\r\n        \"module\": \"commonjs\",\r\n        \"moduleResolution\": \"node\"\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/95",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/95/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/95/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/95/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/95",
    "id": 157384294,
    "number": 95,
    "title": "use res.send directly to send data",
    "user": {
      "login": "chentsulin",
      "id": 3382565,
      "avatar_url": "https://avatars.githubusercontent.com/u/3382565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chentsulin",
      "html_url": "https://github.com/chentsulin",
      "followers_url": "https://api.github.com/users/chentsulin/followers",
      "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
      "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
      "organizations_url": "https://api.github.com/users/chentsulin/orgs",
      "repos_url": "https://api.github.com/users/chentsulin/repos",
      "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chentsulin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-05-29T12:35:00Z",
    "updated_at": "2016-08-13T01:39:18Z",
    "closed_at": "2016-08-13T01:38:57Z",
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/95",
      "html_url": "https://github.com/graphql/express-graphql/pull/95",
      "diff_url": "https://github.com/graphql/express-graphql/pull/95.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/95.patch"
    },
    "body": "```js\r\nresponse.write(data);\r\nresponse.end();\r\n```\r\n\r\ncan be simplified to \r\n\r\n```js\r\nresponse.end(data);\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/94",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/94/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/94/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/94/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/94",
    "id": 157316449,
    "number": 94,
    "title": "Remove http-errors from devDependencies",
    "user": {
      "login": "chentsulin",
      "id": 3382565,
      "avatar_url": "https://avatars.githubusercontent.com/u/3382565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chentsulin",
      "html_url": "https://github.com/chentsulin",
      "followers_url": "https://api.github.com/users/chentsulin/followers",
      "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
      "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
      "organizations_url": "https://api.github.com/users/chentsulin/orgs",
      "repos_url": "https://api.github.com/users/chentsulin/repos",
      "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chentsulin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-28T02:35:20Z",
    "updated_at": "2016-08-13T01:05:00Z",
    "closed_at": "2016-08-13T01:05:00Z",
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/94",
      "html_url": "https://github.com/graphql/express-graphql/pull/94",
      "diff_url": "https://github.com/graphql/express-graphql/pull/94.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/94.patch"
    },
    "body": "http-errors is already a dependency in package.json"
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/93",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/93/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/93/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/93/events",
    "html_url": "https://github.com/graphql/express-graphql/pull/93",
    "id": 157202753,
    "number": 93,
    "title": "Close #92, avoid module.exports breaking change",
    "user": {
      "login": "chentsulin",
      "id": 3382565,
      "avatar_url": "https://avatars.githubusercontent.com/u/3382565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chentsulin",
      "html_url": "https://github.com/chentsulin",
      "followers_url": "https://api.github.com/users/chentsulin/followers",
      "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
      "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
      "organizations_url": "https://api.github.com/users/chentsulin/orgs",
      "repos_url": "https://api.github.com/users/chentsulin/repos",
      "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chentsulin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/graphql/express-graphql/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-05-27T13:07:39Z",
    "updated_at": "2016-06-03T13:21:02Z",
    "closed_at": "2016-05-27T19:31:53Z",
    "pull_request": {
      "url": "https://api.github.com/repos/graphql/express-graphql/pulls/93",
      "html_url": "https://github.com/graphql/express-graphql/pull/93",
      "diff_url": "https://github.com/graphql/express-graphql/pull/93.diff",
      "patch_url": "https://github.com/graphql/express-graphql/pull/93.patch"
    },
    "body": "We should avoid breaking change introduced by babel6. This add \r\n\r\n```js\r\nmodule.exports = exports['default'];\r\n```\r\n\r\nto the compiled files."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/92",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/92/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/92/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/92/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/92",
    "id": 157182687,
    "number": 92,
    "title": "0.5.2 changes module.export",
    "user": {
      "login": "runeh",
      "id": 64223,
      "avatar_url": "https://avatars.githubusercontent.com/u/64223?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/runeh",
      "html_url": "https://github.com/runeh",
      "followers_url": "https://api.github.com/users/runeh/followers",
      "following_url": "https://api.github.com/users/runeh/following{/other_user}",
      "gists_url": "https://api.github.com/users/runeh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/runeh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/runeh/subscriptions",
      "organizations_url": "https://api.github.com/users/runeh/orgs",
      "repos_url": "https://api.github.com/users/runeh/repos",
      "events_url": "https://api.github.com/users/runeh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/runeh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-05-27T11:03:01Z",
    "updated_at": "2016-05-27T19:31:55Z",
    "closed_at": "2016-05-27T19:31:55Z",
    "body": "The symbol exported when using commonjs style require has changed.\r\n\r\nIn 0.5.1:\r\n\r\n```\r\n> require('express-graphql')\r\n[Function: graphqlHTTP]\r\n```\r\n\r\nIn 0.5.2:\r\n\r\n```\r\n> require('express-graphql')\r\n{ default: [Function: graphqlHTTP] }\r\n```\r\n\r\nSomething related to how es modules are transpiled to commonjs I guess."
  },
  {
    "url": "https://api.github.com/repos/graphql/express-graphql/issues/91",
    "repository_url": "https://api.github.com/repos/graphql/express-graphql",
    "labels_url": "https://api.github.com/repos/graphql/express-graphql/issues/91/labels{/name}",
    "comments_url": "https://api.github.com/repos/graphql/express-graphql/issues/91/comments",
    "events_url": "https://api.github.com/repos/graphql/express-graphql/issues/91/events",
    "html_url": "https://github.com/graphql/express-graphql/issues/91",
    "id": 155779187,
    "number": 91,
    "title": "How to put the request body into context?",
    "user": {
      "login": "kennetpostigo",
      "id": 8888991,
      "avatar_url": "https://avatars.githubusercontent.com/u/8888991?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kennetpostigo",
      "html_url": "https://github.com/kennetpostigo",
      "followers_url": "https://api.github.com/users/kennetpostigo/followers",
      "following_url": "https://api.github.com/users/kennetpostigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kennetpostigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kennetpostigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kennetpostigo/subscriptions",
      "organizations_url": "https://api.github.com/users/kennetpostigo/orgs",
      "repos_url": "https://api.github.com/users/kennetpostigo/repos",
      "events_url": "https://api.github.com/users/kennetpostigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kennetpostigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-05-19T16:24:54Z",
    "updated_at": "2016-05-20T13:30:13Z",
    "closed_at": "2016-05-20T13:30:13Z",
    "body": "I'm currently attempting to get the request body into `context`, because part of the body contains a JWT that needs to be decoded. However when I try the following I get `undefined` for `context`:\r\n\r\n```js\r\napp.use('/', graphqlHTTP((req) => ({\r\n  schema: Schema,\r\n  context: req.body,\r\n  pretty: true,\r\n  graphiql: false\r\n})));\r\n```\r\nI logged out `req` and I didn't see `body` in there. I'm using a [react-reach](http://github.com/kennetpostigo/react-reach), and adding the following to the `body` on the request:\r\n\r\n```js\r\n{\r\n  query: {...},\r\n  queryParams: {...},\r\n  options: {\r\n    token: '...'\r\n  }\r\n}\r\n```\r\n\r\nI know the `body` is being interpreted because my queries/mutations that are in the body are being interpreted and executed. Just can't seem to find it when passed to `context`. "
  }
]
